plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.serialization)
    alias(libs.plugins.compose.compiler)
}

android {
    namespace 'com.appifly.ktor'
    compileSdk 34

    defaultConfig {
        applicationId "com.appifly.ktor"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0"
        manifestPlaceholders = [googleMapsApiKey: getMapApiKey()]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }
    buildFeatures {
        buildConfig true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    buildFeatures {
        compose true
        viewBinding true
    }
}

def getMapApiKey() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    String api_key = properties.getProperty("GOOGLE_MAPS_API_KEY")

    if (api_key == null)
        throw new GradleException("")

    return api_key
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest
    implementation(libs.koin.androidx.compose.navigation)
    // serialization
    implementation(libs.kotlinx.serialization.json)
    implementation project(":network")

    // Ktor
    implementation libs.ktor.client.android
    implementation libs.ktor.client.core
    implementation libs.ktor.client.serialization.jvm
    implementation libs.ktor.client.logging
    implementation libs.androidx.ui.tooling.preview
// Coroutines

    implementation libs.kotlinx.coroutines.core
    implementation libs.kotlinx.coroutines.android
// Coroutines - Deferred adapter
    implementation libs.retrofit2.kotlin.coroutines.adapter

    implementation libs.koin.android
    // Google Maps Compose View
    implementation libs.maps.compose

    // Location
    implementation libs.play.services.location

    // Accompanist Permissions
    implementation libs.accompanist.permissions
    implementation libs.androidx.runtime.livedata
    implementation(libs.coil.compose)

}